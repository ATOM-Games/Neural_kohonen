<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="COD.Text" xml:space="preserve">
    <value>ollections;\n\n[System.Serializable]\npublic class Attts {\n	public Texture2D At_1x1_Net;\n	public Texture2D At_1x1_Neact;\n	public Texture2D At_1x1_Act;\n	public Texture2D At_1x1_Act_Vid;\n	public Texture2D At_1x1_Neg;\n	public Texture2D At_1x1_Neg_Vid;\n	public Texture2D At_2x1_Act;\n	public Texture2D At_2x1_Act_Vid;\n	public Texture2D At_2x1_Neg;\n	public Texture2D At_2x1_Neg_Vid;\n	public Texture2D At_3x1_Act;\n	public Texture2D At_3x1_Act_Vid;\n	public Texture2D At_3x1_Neg;\n	public Texture2D At_3x1_Neg_Vid;\n	public Texture2D At_2x2_Act;\n	public Texture2D At_2x2_Act_Vid;\n	public Texture2D At_2x2_Neg;\n	public Texture2D At_2x2_Neg_Vid;\n	public Texture2D Block_1x1;\n	public Texture2D Block_2x1;\n	public Texture2D Block_3x1;\n	public Texture2D Block_2x2;\n}\n[System.Serializable]\npublic class OneObgr {\n	public bool ActUbgr=false;\n	public string Nazva, Opisa;\n	public int Cena;\n}\n[System.Serializable]\npublic class Funk {\n	public string Do=  , Posle =   ;\n	public double Znt;\n}\n\n[System.Serializable]\npublic class Pref {\n	public string NamePrefiks;\n	public int Cena = -1; \n	public Funk[] Znatenia;\n}\n\n[System.Serializable]\npublic class OneTutu {\n	public string Name_Object, Type_Object;\n	public Pref[] Prefiks;\n	public Texture2D[] Object_Icon;\n	public int Object_Mass, Max_Object_int_One_Atta, MaxUbgr;\n	public double Max_Object_double_One_Atta;\n	public string[] Object_Ubgrades;\n	public int TrebuemiOpit, ID_opit;\n	public bool ShowTextInt, ShowTextDouble, ActObject = true, ShowType;\n	public OneObgr[] Ubgrades;\n	public string Disc;\n}\n[System.Serializable]\npublic class NeAttts {\n	public Texture2D Plus, Minus, Vopros, Voskl, Galka, Disketa, Pereterknut, Mishen, Krestik, UDRL, At_5x1_Act, At_5x1_Act_Vid, OsobT, OsobTV, InfooPodl, Scrows, LaserGor, LaserVert;\n}\n\n//===========(C) A.B.C.\npublic class LIBRARY_OneAtta : MonoBehaviour {\n	public Attts OneAtPodlojka;\n	public NeAttts OneNeAtPodlojka;\n	public OneTutu[] Objects_In_Atta;\n	Vector2 Razmer;string Op, nme;\n	public Font Fontos, FontAr, FontORC, FontABC;\n	public Color[] Cvet;\n	int i=0, j=0;\n	//public PLAYERS plrs;\n\n	void Update(){\n		for(i=0;i&lt;Objects_In_Atta.Length;i++){\n			if (PLAYERS.GetPLR().OPIT_Int [Objects_In_Atta [i].ID_opit] &lt; Objects_In_Atta [i].TrebuemiOpit) {\n				Objects_In_Atta [i].ActObject = false;\n			} else {\n				Objects_In_Atta [i].ActObject = true;\n			}\n		}\n	}\n	public void DRAW_One (Vector2 Position, bool RadZabit, int IDobj, string TextPlus, int IndexIcon, bool ShowText, bool ActObject, bool VidelenObject, int Colit, double SoderjObject, bool Negativ, string SostAtta, bool block, string TypeOfOb) {\n		if(Objects_In_Atta[IDobj].Object_Mass==0 || Objects_In_Atta[IDobj].Object_Mass==1){\n			Razmer.x=50;\n			Razmer.y=50;\n		}\n		if(Objects_In_Atta[IDobj].Object_Mass==2){\n			Razmer.x=100;\n			Razmer.y=50;\n		}\n		if(Objects_In_Atta[IDobj].Object_Mass==3){\n			Razmer.x=150;\n			Razmer.y=50;\n		}\n		if(Objects_In_Atta[IDobj].Object_Mass==4){\n			Razmer.x=100;\n			Razmer.y=100;\n		}\n		//===========(C) A.B.C.\n		if(RadZabit==true){\n			GUI.color = Color.white;\n			GUI.DrawTexture(new Rect(Position.x,Position.y,50,50), Objects_In_Atta[0].Object_Icon[0]);\n			IDobj = 0;\n		}else{\n			if(SostAtta== net ){\n				GUI.color = Color.white;\n				GUI.DrawTexture(new Rect(Position.x,Position.y,50,50), OneAtPodlojka.At_1x1_Net);\n				IDobj = 0;\n			}\n			if(SostAtta== neact ){\n				GUI.color = Color.white;\n				GUI.DrawTexture(new Rect(Position.x,Position.y,50,50), OneAtPodlojka.At_1x1_Neact);\n				IDobj = 0;\n			}\n			if(SostAtta== act ){\n				if(Negativ==true){\n					if(VidelenObject==true){\n						if(Objects_In_Atta[IDobj].Object_Mass==0 || Objects_In_Atta[IDobj].Object_Mass==1){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_1x1_Neg_Vid);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==2){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_2x1_Neg_Vid);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==3){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_3x1_Neg_Vid);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==4){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_2x2_Neg_Vid);\n						}\n					}else{\n						if(Objects_In_Atta[IDobj].Object_Mass==0 || Objects_In_Atta[IDobj].Object_Mass==1){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_1x1_Neg);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==2){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_2x1_Neg);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==3){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_3x1_Neg);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==4){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_2x2_Neg);\n						}\n					}\n				}else{\n					if(VidelenObject==true){\n						if(Objects_In_Atta[IDobj].Object_Mass==1){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_1x1_Act_Vid);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==2){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_2x1_Act_Vid);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==3){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_3x1_Act_Vid);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==4){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_2x2_Act_Vid);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==0){\n							if(TypeOfOb==   ){\n								GUI.color = Color.white;\n								GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_1x1_Act_Vid);}\n							if(TypeOfOb== Weapon ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.8f,0.4f,0.2f,0.2f));}\n							if(TypeOfOb== Armor ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,100,100), OneNeAtPodlojka.OsobTV, new Rect(0,-0.4f,0.4f,0.4f));}\n							if(TypeOfOb== Health ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.8f,0.8f,0.2f,0.2f));}\n							if(TypeOfOb== Light ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.4f,0.6f,0.2f,0.2f));}\n							if(TypeOfOb== Explosion ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.4f,0.8f,0.2f,0.2f));}\n							if(TypeOfOb== Radar ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.6f,0.8f,0.2f,0.2f));}\n							if(TypeOfOb== GOLU ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,50,50), OneNeAtPodlojka.OsobTV, new Rect(0.8f,0.2f,0.2f,0.2f));}\n							if(TypeOfOb== Shirt ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,100,50), OneNeAtPodlojka.OsobTV, new Rect(0,0.2f,0.4f,0.2f));}\n							if(TypeOfOb== Shtani ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,100,50), OneNeAtPodlojka.OsobTV, new Rect(0,0,0.4f,0.2f));}\n							if(TypeOfOb== Bots ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.4f,0,0.2f,0.2f));}\n							if(TypeOfOb== Clock ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.8f,0.6f,0.2f,0.2f));}\n							if(TypeOfOb== Perta ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.6f,0.2f,0.2f,0.2f));}\n							if(TypeOfOb== Otki ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.6f,0,0.2f,0.2f));}\n							if(TypeOfOb== Masks ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.8f,0,0.2f,0.2f));}\n							if(TypeOfOb== Implant ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.6f,0.6f,0.2f,0.2f));}\n							if(TypeOfOb== Manny ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobTV, new Rect(0.6f,0.4f,0.2f,0.2f));}\n							\n						}\n					}else{\n						if(Objects_In_Atta[IDobj].Object_Mass==1){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_1x1_Act);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==2){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_2x1_Act);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==3){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_3x1_Act);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==4){\n							GUI.color = Color.white;\n							GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_2x2_Act);\n						}\n						if(Objects_In_Atta[IDobj].Object_Mass==0){\n							if(TypeOfOb==   ){\n								GUI.color = Color.white;\n								GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.At_1x1_Act);}\n							if(TypeOfOb== Weapon ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.8f,0.4f,0.2f,0.2f));}\n							if(TypeOfOb== Armor ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,100,100), OneNeAtPodlojka.OsobT, new Rect(0,-0.4f,0.4f,0.4f));}\n							if(TypeOfOb== Health ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.8f,0.8f,0.2f,0.2f));}\n							if(TypeOfOb== Light ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.4f,0.6f,0.2f,0.2f));}\n							if(TypeOfOb== Explosion ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.4f,0.8f,0.2f,0.2f));}\n							if(TypeOfOb== Radar ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.6f,0.8f,0.2f,0.2f));}\n							if(TypeOfOb== GOLU ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,50,50), OneNeAtPodlojka.OsobT, new Rect(0.8f,0.2f,0.2f,0.2f));}\n							if(TypeOfOb== Shirt ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,100,50), OneNeAtPodlojka.OsobT, new Rect(0,0.2f,0.4f,0.2f));}\n							if(TypeOfOb== Shtani ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,100,50), OneNeAtPodlojka.OsobT, new Rect(0,0,0.4f,0.2f));}\n							if(TypeOfOb== Bots ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.4f,0,0.2f,0.2f));}\n							if(TypeOfOb== Clock ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.8f,0.6f,0.2f,0.2f));}\n							if(TypeOfOb== Perta ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.6f,0.2f,0.2f,0.2f));}\n							if(TypeOfOb== Otki ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.6f,0,0.2f,0.2f));}\n							if(TypeOfOb== Masks ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.8f,0,0.2f,0.2f));}\n							if(TypeOfOb== Implant ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.6f,0.6f,0.2f,0.2f));}\n							if(TypeOfOb== Manny ){\n								GUI.color = Color.white;\n								GUI.DrawTextureWithTexCoords(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneNeAtPodlojka.OsobT, new Rect(0.6f,0.4f,0.2f,0.2f));}\n						}\n					}\n				}\n			}\n		}\n		//===========(C) A.B.C.\n		if(ActObject==true) {\n			GUI.color = Color.white;\n		}else{\n			GUI.color = Color.red;\n		}\n		if (IDobj &lt; 0) {\n			GUI.DrawTexture(new Rect(Position.x,Position.y,50,50), Objects_In_Atta[0].Object_Icon[0]);\n		} else {\n			GUI.DrawTexture (new Rect (Position.x, Position.y, Razmer.x, Razmer.y), Objects_In_Atta [IDobj].Object_Icon [IndexIcon]);\n		}\n		if(ShowText==true) {\n			GUI.color = Color.white;\n			GUI.skin.label.fontSize=13;\n			GUI.skin.label.font=FontAr;\n			GUI.skin.label.fontStyle = FontStyle.Bold;\n			GUI.skin.label.alignment = TextAnchor.MiddleCenter;\n			GUI.DrawTexture(new Rect(Position.x+3, Position.y+(Razmer.y-16), Razmer.x-6, 14), Objects_In_Atta[0].Object_Icon[1]);\n			if(Objects_In_Atta[IDobj].ShowTextInt==true){\n				GUI.Label(new Rect(Position.x, Position.y+(Razmer.y-18), Razmer.x, 20),   +Colit+TextPlus);\n			}\n			if(Objects_In_Atta[IDobj].ShowTextDouble==true){\n				GUI.Label(new Rect(Position.x, Position.y+(Razmer.y-18), Razmer.x, 20),   +SoderjObject+TextPlus);\n			}\n			if (TextPlus != null &amp;&amp; TextPlus !=   ) {\n				GUI.Label(new Rect(Position.x, Position.y+(Razmer.y-18), Razmer.x, 20), TextPlus);\n			}\n		}\n		//=============(c) A.B.C.\n		GUI.color = Color.white;\n		if(block==true &amp;&amp; RadZabit==false){\n			if(Objects_In_Atta[IDobj].Object_Mass==0 || Objects_In_Atta[IDobj].Object_Mass==1){\n				if(TypeOfOb== Armor ){GUI.DrawTexture(new Rect(Position.x,Position.y,100,100), OneAtPodlojka.Block_2x2);}\n				if(TypeOfOb== Shirt  || TypeOfOb== Shtani ){GUI.DrawTexture(new Rect(Position.x,Position.y,100,50), OneAtPodlojka.Block_2x1);}\n				if(TypeOfOb!= Shirt  &amp;&amp; TypeOfOb!= Shtani  &amp;&amp; TypeOfOb!= Armor ){GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.Block_1x1);}\n			}\n			if(Objects_In_Atta[IDobj].Object_Mass==2){\n				GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.Block_2x1);\n			}\n			if(Objects_In_Atta[IDobj].Object_Mass==3){\n				GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.Block_3x1);\n			}\n			if(Objects_In_Atta[IDobj].Object_Mass==4){\n				GUI.DrawTexture(new Rect(Position.x,Position.y,Razmer.x,Razmer.y), OneAtPodlojka.Block_2x2);\n			}\n		}\n	}\n	public void InfoVivod(int IDo, int Prefiks, int Col, int Mnogo, double PRro, Vector2 Gde){\n		Op =   ;\n		nme =   ;\n		GUI.color = Color.white;\n		GUI.DrawTexture (new Rect (Gde.x, Gde.y, 300, 200), OneNeAtPodlojka.InfooPodl);\n		GUI.skin.label.font = FontAr;\n		GUI.skin.label.fontSize = 15;\n		GUI.skin.label.alignment = TextAnchor.UpperLeft;\n		GUI.depth = 1999999;\n		if (Objects_In_Atta [IDo].Prefiks.Length &gt; 0) {\n			if (Objects_In_Atta [IDo].ShowTextInt == true) {\n				if (Objects_In_Atta [IDo].Prefiks [Prefiks].Cena &gt; 0) {\n					Op = Op +    + Mnogo +   штук   + Objects_In_Atta [IDo].Prefiks [Prefiks].Cena * Mnogo +  $\n(Цена за штуку :   + Objects_In_Atta [IDo].Prefiks [Prefiks].Cena +   $)\n ;\n				}\n			} else {\n				if (Objects_In_Atta [IDo].Prefiks [Prefiks].Cena &gt; 0) {\n					Op = Op +  Цена   + Objects_In_Atta [IDo].Prefiks [Prefiks].Cena +   $\n ;\n				}\n			}\n			if (Objects_In_Atta [IDo].Prefiks [Prefiks].Znatenia.Length &gt; 0) {\n				for (j = 0; j &lt; Objects_In_Atta [IDo].Prefiks [Prefiks].Znatenia.Length; j++) {\n					Op = Op + Objects_In_Atta [IDo].Prefiks [Prefiks].Znatenia [j].Do +     + Objects_In_Atta [IDo].Prefiks [Prefiks].Znatenia [j].Znt +     + Objects_In_Atta [IDo].Prefiks [Prefiks].Znatenia [j].Posle +  \n ;\n				}\n			}\n			if(Objects_In_Atta [IDo].Prefiks [Prefiks].NamePrefiks !=    ) {\n				nme =  (  + Objects_In_Atta [IDo].Prefiks [Prefiks].NamePrefiks +  )   + Objects_In_Atta [IDo].Name_Object;\n			} else {\n				nme = Objects_In_Atta [IDo].Name_Object;\n			}\n		} else {\n			nme = Objects_In_Atta [IDo].Name_Object;\n		}\n		GUI.Label (new Rect (Gde.x + 10, Gde.y + 130, 280, 100),    + Op);\n		if (Objects_In_Atta [IDo].ActObject == true) {\n			GUI.color = Color.white;\n		} else {\n			GUI.color = Color.red;\n		}\n		if (Objects_In_Atta [IDo].Object_Mass == 1 || Objects_In_Atta [IDo].Object_Mass == 4) {\n			GUI.DrawTexture (new Rect (Gde.x + 100, Gde.y + 40, 80, 80), Objects_In_Atta [IDo].Object_Icon [0]);\n		}\n		if (Objects_In_Atta [IDo].Object_Mass == 2) {\n			GUI.DrawTexture (new Rect (Gde.x + 75, Gde.y + 40, 150, 75), Objects_In_Atta [IDo].Object_Icon [0]);\n		}\n		if (Objects_In_Atta [IDo].Object_Mass == 3) {\n			GUI.DrawTexture (new Rect (Gde.x + 55, Gde.y + 40, 190, 65), Objects_In_Atta [IDo].Object_Icon [0]);\n		}\n		GUI.skin.label.fontSize = 20;\n		GUI.skin.label.font = FontAr;\n		GUI.skin.label.fontStyle = FontStyle.Bold;\n		GUI.skin.label.alignment = TextAnchor.UpperCenter;\n		GUI.color = Cvet [Col];\n		GUI.Label (new Rect (Gde.x + 10, Gde.y + 10, 280, 50), nme);\n	}\n}\n\n</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>